{"version":3,"sources":["helpers/randomSort.js","helpers/findImageById.js","widgets/Result.js","widgets/User.js","images/background_left.png","images/background_right.png","images/logo.png","components/LandingPage/index.js","components/ImageSetSwitch/ImageSetReadyPage/index.js","components/ImageSetSwitch/ImageSetChoosePage/index.js","components/ImageSetSwitch/index.js","components/CompletedPage/index.js","reducers.js","store.js","App.js","index.js"],"names":["randomSort","array","sort","Math","random","findImageById","imageSets","imageId","reduce","result","imageSet","imageIndex","images","findIndex","i","id","SET_LOADING","GET_TEST_SET","SEND_SET_RESULT","SEND_FINAL_RESULT","reducer","state","resultImageSet","name","finalResult","loading","action","type","testSet","map","s","selectedImage","redirectTo","nextImageSetId","setLoading","CREATE_USER","userId","user","createUser","data","gender","age","dispatch","API_REQUEST","types","auth","method","body","json","entrypoint","onSuccess","testSetId","firstImageSetId","push","UserDataPage","useState","setName","setAge","setGender","useDispatch","className","src","backgroundLeft","alt","backgroundRight","logo","value","onChange","e","target","placeholder","replace","option","onClick","defaultProps","ImageSetReadyPage","location","useLocation","history","useHistory","setId","useParams","isFinal","useMemo","imageSetData","useSelector","Result","find","set","User","useEffect","pathname","ImageSetChoosePage","imageLoading","setImageLoading","originalImages","cacheImgs","useCallback","srcArray","a","Promise","resolve","reject","img","Image","onload","onerror","promises","all","counter","setCounter","leftPicIndex","setLeftPicIndex","rightPicIndex","setRightPicIndex","leftPicked","setLeftPicked","rightPicked","setRightPicked","disabled","setDisabled","sendResult","resultImageId","dispatchPayload","sendFinalResult","getState","imageSetIndex","length","newImageSetId","sendSetResult","pickLeft","resultImage","setTimeout","pickRight","style","opacity","backgroundImage","url","ImageSetSwitch","path","CompletedPage","href","rel","createRootReducer","combineReducers","router","connectRouter","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","thunk","fetchMiddleware","logger","App","videoId","opts","height","width","playerVars","autoplay","to","setAPIHost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6855f23c.chunk.js","sourcesContent":["\nexport default function randomSort(array) {\n  return [...array].sort(() => Math.random() - 0.5);\n}","export default function findImageById(imageSets, imageId) {\n  return imageSets.reduce((result, imageSet) => {\n    if (!result) {\n      const imageIndex = imageSet.images.findIndex(i => i.id === imageId);\n      if (~imageIndex) {\n        return imageSet.images[imageIndex];\n      }\n    }\n\n    return result;\n  }, null)\n}","import { push } from 'connected-react-router';\nimport { API_REQUEST } from 'redux-middleware-fetch';\nimport randomSort from '../helpers/randomSort';\nimport findImageById from '../helpers/findImageById';\n\nconst SET_LOADING = 'SET_LOADING';\nconst GET_TEST_SET = 'GET_TEST_SET';\nconst SEND_SET_RESULT = 'SEND_SET_RESULT';\nconst SEND_FINAL_RESULT = 'SEND_FINAL_RESULT';\n\nexport default function reducer(\n  state = {\n    imageSets: [],\n    resultImageSet: {\n      id: 'final',\n      name: 'final',\n      images: [],\n    },\n    finalResult: {},\n    loading: false,\n  },\n  action = {},\n) {\n  switch (action.type) {\n    case SET_LOADING:\n      return ({\n        ...state,\n        loading: true,\n      });\n\n    case GET_TEST_SET:\n      return ({\n        ...state,\n        imageSets: action.testSet.imageSets.map(s => ({\n          ...s,\n          id: s.id,\n          images: randomSort(s.images),\n        })),\n      });\n\n    case SEND_SET_RESULT: {\n      const selectedImage = findImageById(state.imageSets, action.imageId);\n\n      return ({\n        ...state,\n        redirectTo: `/set/${action.nextImageSetId === -1 ? 'final' : action.nextImageSetId}`,\n        resultImageSet: {\n          ...state.resultImageSet,\n          images: [\n            ...state.resultImageSet.images,\n            selectedImage,\n          ],\n        },\n        loading: false,\n      });\n    }\n\n    case SEND_FINAL_RESULT: {\n      const selectedImage = findImageById(state.imageSets, action.imageId);\n\n      return ({\n        ...state,\n        redirectTo: `/completed`,\n        finalResult: selectedImage,\n        loading: false,\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport function setLoading() {\n  return {\n    type: SET_LOADING,\n  };\n}\n\nexport function getTestSetData(testSetId) {\n  return dispatch => dispatch({\n    [API_REQUEST]: {\n      types: [\n        GET_TEST_SET,\n      ],\n      auth: true,\n      method: 'GET',\n      entrypoint: `/testSet/${testSetId}`,\n      onSuccess: ({ testSet }) => {\n        const firstImageSetId = testSet.imageSets[0].id;\n        dispatch(push(`/set/${firstImageSetId}`));\n      },\n    },\n  });\n}\n\nexport function sendSetResult(userId, setId, imageId) {\n  return (dispatch, getState) => dispatch({\n    [API_REQUEST]: {\n      types: [\n        SEND_SET_RESULT,\n      ],\n      auth: true,\n      method: 'POST',\n      body: {\n        userId,\n        imageId,\n      },\n      json: true,\n      entrypoint: '/setResult',\n      dispatchPayload: {\n        imageId,\n      },\n      onSuccess: () => {\n        const { Result: { imageSets } } = getState();\n\n        const imageSetIndex = imageSets.findIndex(set => `${set.id}` === setId);\n\n        if (imageSetIndex + 1 >= imageSets.length) {\n          dispatch(push('/set/final'));\n        } else {\n          const newImageSetId = imageSets[imageSetIndex + 1].id;\n          dispatch(push(`/set/${newImageSetId}`));\n        }\n      },\n    },\n  });\n}\n\nexport function sendFinalResult(userId, imageId) {\n  return dispatch => dispatch({\n    [API_REQUEST]: {\n      types: [\n        SEND_FINAL_RESULT,\n      ],\n      auth: true,\n      method: 'POST',\n      body: {\n        userId,\n        imageId,\n      },\n      json: true,\n      entrypoint: '/finalResult',\n      dispatchPayload: {\n        imageId,\n      },\n      onSuccess: () => {\n        dispatch(push('/completed'));\n      }\n    },\n  });\n}","import { API_REQUEST } from 'redux-middleware-fetch';\nimport { getTestSetData } from './Result';\n\nconst TEST_SET_ID = 1;\n\nconst CREATE_USER = 'CREATE_USER';\n\nexport default function reducer(state = {\n  userId: null,\n}, action = {}) {\n  switch (action.type) {\n    case CREATE_USER:\n      return ({\n        ...state,\n        userId: action.user.id,\n      });\n\n    default: return state;\n  }\n}\n\nexport function createUser(data) {\n  const {\n    name,\n    gender,\n    age,\n  } = data;\n\n  return dispatch => dispatch({\n    [API_REQUEST]: {\n      types: [\n        CREATE_USER,\n      ],\n      auth: true,\n      method: 'POST',\n      body: {\n        name,\n        gender,\n        age,\n      },\n      json: true,\n      entrypoint: '/user',\n      onSuccess: () => {\n        dispatch(getTestSetData(TEST_SET_ID));\n      },\n    },\n  });\n}","export default __webpack_public_path__ + \"static/media/background_left.87699ce1.png\";","export default __webpack_public_path__ + \"static/media/background_right.a9edc41f.png\";","export default __webpack_public_path__ + \"static/media/logo.89480371.png\";","// @flow\n\nimport React, {\n  useState,\n} from 'react';\nimport {\n  useDispatch,\n} from 'react-redux';\nimport { createUser } from '../../widgets/User';\nimport backgroundLeft from '../../images/background_left.png';\nimport backgroundRight from '../../images/background_right.png';\nimport logo from '../../images/logo.png';\nimport './index.scss';\n\nconst DEV_USE = {\n  name: 'shawn',\n  age: 25,\n};\n\nfunction UserDataPage() {\n  const [name, setName] = useState(process.env.NODE_ENV === 'development' ? DEV_USE.name : '');\n  const [age, setAge] = useState(process.env.NODE_ENV === 'development' ? DEV_USE.age : '');\n  const [gender, setGender] = useState('male');\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"landing-page\">\n      <img src={backgroundLeft} alt=\"\" />\n      <img src={backgroundRight} alt=\"\" />\n      <div className=\"input-row-wrapper\">\n        <img className=\"logo\" src={logo} alt=\"\" />\n        <div className=\"input-row\">\n          <span className=\"label\">name:</span>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            placeholder=\"name\" />\n        </div>\n        <div className=\"input-row\">\n          <span className=\"label\">age:</span>\n          <input\n            type=\"text\"\n            value={age}\n            onChange={e => setAge(e.target.value.replace(/[^0-9]/, ''))}\n            placeholder=\"age\" />\n        </div>\n        <div className=\"input-row\">\n          <span className=\"label\">gender:</span>\n          <select\n            value={gender}\n            onChange={({ target }) => setGender(target.value)}>\n            {['male', 'female'].map(option => (\n              <option\n                key={option}\n                value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(createUser({\n            name,\n            age,\n            gender,\n          }))}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nUserDataPage.defaultProps = {\n\n};\n\nexport default UserDataPage;\n","import React, {\n  useMemo,\n  useEffect,\n} from 'react';\nimport {\n  useHistory,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport {\n  useSelector,\n} from 'react-redux';\nimport './index.scss';\n\nfunction ImageSetReadyPage() {\n  const location = useLocation();\n  const history = useHistory();\n  const { setId } = useParams();\n\n  const isFinal = useMemo(() => setId === 'final', [setId]);\n\n  const imageSetData = useSelector(state => {\n    if (isFinal) {\n      return state.Result.resultImageSet;\n    }\n\n    const imageSets = state.Result.imageSets;\n    return (\n      imageSets.find(set => `${set.id}` === setId) || {}\n    )\n  });\n\n  const userId = useSelector(state => state.User.userId);\n\n  useEffect(() => {\n    if (!userId) {\n      history.push('/');\n    }\n  }, [userId, history]);\n\n  return (\n    <div className=\"image-set-ready-page\">\n      {imageSetData.id === 'final' ? (\n        <span>Final Round</span>\n      ) : (\n        <span>\n          type:\n          {imageSetData.name || 'ERROR'}\n        </span>\n      )}\n      <button\n        type='button'\n        onClick={() => history.push(`${location.pathname}/start`)}>\n        START\n      </button>\n    </div>\n  );\n}\n\nexport default ImageSetReadyPage;\n","// @flow\n\nimport React, {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\nimport {\n  useParams,\n} from 'react-router-dom';\nimport {\n  useSelector,\n  useDispatch,\n} from 'react-redux';\nimport './index.scss';\nimport {\n  sendFinalResult,\n  sendSetResult,\n  setLoading,\n} from '../../../widgets/Result';\n\nfunction ImageSetChoosePage() {\n  const { setId } = useParams();\n  const dispatch = useDispatch();\n\n  const isFinal = setId === 'final';\n\n  const imageSetData = useSelector(state => {\n    if (isFinal) {\n      return state.Result.resultImageSet;\n    }\n\n    const imageSets = state.Result.imageSets;\n    return (\n      imageSets.find(set => `${set.id}` === setId) || {}\n    )\n  });\n\n  const loading = useSelector(state => state.Result.loading);\n\n  const [imageLoading, setImageLoading] = useState(true);\n\n  const originalImages = useMemo(() => imageSetData.images || [], [imageSetData.images]);\n  const setName = useMemo(() => {\n    if (imageSetData.id === 'final') return '總決賽';\n\n    return imageSetData.name;\n  }, [imageSetData.id, imageSetData.name]);\n\n  const cacheImgs = useCallback(async (srcArray) => {\n    const promises = await srcArray.map((src) => {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n\n        img.src = src;\n        img.onload = resolve();\n        img.onerror = reject();\n      });\n    });\n\n    await Promise.all(promises);\n\n    setImageLoading(false);\n  }, []);\n\n  useEffect(() => {\n    cacheImgs(originalImages);\n  }, [cacheImgs, originalImages]);\n\n  const [counter, setCounter] = useState(1);\n  const [leftPicIndex, setLeftPicIndex] = useState(0);\n  const [rightPicIndex, setRightPicIndex] = useState(1);\n  const [leftPicked, setLeftPicked] = useState(false);\n  const [rightPicked, setRightPicked] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  const userId = useSelector(state => state.User.userId);\n\n  const sendResult = useCallback((resultImageId) => {\n    if (isFinal) {\n      dispatch(setLoading());\n      dispatch(sendFinalResult(userId, resultImageId));\n    } else {\n      dispatch(setLoading());\n      dispatch(sendSetResult(userId, setId, resultImageId));\n    }\n  }, [dispatch, isFinal, setId, userId])\n\n  const pickLeft = useCallback(() => {\n    if (disabled || loading) return;\n\n    if (counter === originalImages.length - 1) {\n      const resultImage = originalImages[leftPicIndex];\n\n      sendResult(resultImage.id);\n    } else {\n      setDisabled(true);\n      setLeftPicked(true);\n\n      setTimeout(() => {\n        setRightPicIndex(counter + 1);\n        setCounter(counter + 1);\n\n        setTimeout(() => {\n          setLeftPicked(false);\n\n          setTimeout(() => {\n            setDisabled(false);\n          }, 200)\n        }, 200)\n      }, 200);\n    }\n  }, [disabled, loading, counter, originalImages, leftPicIndex, sendResult]);\n\n  const pickRight = useCallback(() => {\n    if (disabled || loading) return;\n\n    if (counter === originalImages.length - 1) {\n      const resultImage = originalImages[rightPicIndex];\n\n      sendResult(resultImage.id);\n    } else {\n      setDisabled(true);\n      setRightPicked(true);\n      setTimeout(() => {\n        setLeftPicIndex(counter + 1);\n        setCounter(counter + 1);\n\n        setTimeout(() => {\n          setRightPicked(false);\n\n          setTimeout(() => {\n            setDisabled(false);\n          }, 200)\n        }, 200)\n      }, 200)\n    }\n  }, [counter, disabled, loading, originalImages, rightPicIndex, sendResult]);\n\n  if (imageLoading) return null;\n\n  return (\n    <div\n      className=\"image-set-choose-page\"\n      style={{\n        ...(loading ? { opacity: 0.5 } : {}),\n      }}>\n      <div className=\"header\">\n        <span>{`${setName}: ${counter}/${originalImages.length - 1}`}</span>\n      </div>\n      <div className=\"click-block-wrapper\">\n        <div className=\"click-block-expander\">\n          <div\n            className=\"click-block\"\n            onClick={pickLeft}\n            style={{\n              backgroundImage: `url(${originalImages[leftPicIndex]?.url})`,\n              opacity: rightPicked ? 0 : 1,\n            }} />\n        </div>\n      </div>\n      <div className=\"click-block-wrapper right\">\n        <div className=\"click-block-expander\">\n          <div\n            className=\"click-block\"\n            onClick={pickRight}\n            style={{\n              backgroundImage: `url(${originalImages[rightPicIndex]?.url})`,\n              opacity: leftPicked ? 0 : 1,\n            }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nImageSetChoosePage.defaultProps = {\n\n};\n\nexport default ImageSetChoosePage;\n","import React, {\n  useEffect,\n} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ImageSetReadyPage from './ImageSetReadyPage';\nimport ImageSetChoosePage from './ImageSetChoosePage';\nimport {\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { push } from 'connected-react-router';\n\nfunction ImageSetSwitch() {\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.User.userId);\n\n  useEffect(() => {\n    if (!userId) {\n      dispatch(push('/'));\n    }\n  }, [dispatch, userId]);\n\n  return (\n    <Switch>\n      <Route path=\"/set/:setId/start\">\n        <ImageSetChoosePage />\n      </Route>\n      <Route path=\"/set/:setId\">\n        <ImageSetReadyPage />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default ImageSetSwitch;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './index.scss';\n\nfunction CompletedPage() {\n  const finalResult = useSelector(state => state.Result.finalResult);\n\n  return (\n    <div className=\"completed-page\">\n      <span>Thank you!</span>\n      <img src={finalResult.url || \"https://i.imgur.com/yizNBG6.jpg\"} alt=\"result\" />\n      <span>Plz feel free to contact Akimo for feedbacks</span>\n      <a\n        href=\"https://dcard.slack.com/team/U8ZAM5ZFS\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <button>Her Slack Profile</button>\n      </a>\n    </div>\n  );\n}\n\nexport default CompletedPage;\n","// @flow\n\nimport {\n  combineReducers,\n} from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport Result from './widgets/Result';\nimport User from './widgets/User';\n\nexport const createRootReducer = history => combineReducers({\n  Result,\n  router: connectRouter(history),\n  User,\n});\n\nexport default createRootReducer;\n","// @flow\n\nimport {\n  createStore,\n  compose,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport fetchMiddleware from 'redux-middleware-fetch';\nimport logger from 'redux-logger';\nimport createRootReducer from './reducers';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore() {\n  const store = createStore(\n    createRootReducer(history),\n    {},\n    compose(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk,\n        fetchMiddleware,\n        logger,\n      ),\n    ),\n  );\n\n  return store;\n}\n","// @flow\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter,\n} from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport ImageSetSwitch from './components/ImageSetSwitch';\nimport CompletedPage from './components/CompletedPage';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './store';\nimport YouTube from 'react-youtube';\n\nconst store = configureStore(history);\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <YouTube videoId=\"2t_SlySVgDg\" opts={{\n        height: '0',\n        width: '0',\n        playerVars: {\n          autoplay: 1,\n        },\n      }} />\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path=\"/completed\">\n              <CompletedPage />\n            </Route>\n            <Route path=\"/set\">\n              <ImageSetSwitch />\n            </Route>\n            <Route path=\"/\">\n              <LandingPage />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </ConnectedRouter>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { setAPIHost } from 'redux-middleware-fetch';\nimport './index.scss';\nimport App from './App';\n\n// setAPIHost(process.env.NODE_ENV === 'development' ? 'http://localhost:9000' : 'https://to-pick-one-server.herokuapp.com');\nsetAPIHost('https://to-pick-one-server.herokuapp.com');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}